Request Headers


User-Agent: PostmanRuntime/7.26.10
//The user-agent header gives information about any user-agent software acting on behalf of the user. This could be API sowftware or a browser or anything else
sending the html request for the user. In this case, it is the postman program and its version number.

Accept: */*
//The accept header describes the media type allowed for the transfer, such as application, audio, message, text, or video.

Postman-Token: aa9b4800-df3f-45dc-9d0d-aed1d31ef307
//The postman token is a token generated by postman to avoid a bug common in chrome. The token helps identify between different requests on the server side and prevents requests 
from receiving info meant for other requests with the same perameter.

Host: www.googleapis.com
//The host of the domain name, sometimes also includes port infromation (tcp vs udp, etc..)

Accept-Encoding: gzip, deflate, br
//The Accept Encoding header lists all coding methods allowed for things like http compression.

Connection: keep-alive
//The connection header describes options on how the connection should operate. Here, keep-alive means the connection will not terminate until time out or by request.


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Response Headers



Content-Type: application/json; charset=UTF-8
//The content type describes the media type sent in the respond header. Here, it responded with a json application and a character set using unicode-8

Vary: Origin
Vary: X-Origin
Vary: Referer
//The vary header is used to tell proxies downstream of the connection how they are to resolve future request headers by either using a cached response or by requesting
the data from the origin server. In this case, it requests from origin, a preset origin, or by reference.

Content-Encoding: gzip
//similar to the accept coding, describes the type of http compression that was used in the response.

Date: Sat, 30 Jan 2021 05:46:11 GMT
//Date and time the response was generated and sent

Server: ESF
//The server name that sent the response.

Cache-Control: private
//The cache-control header describes whether or not the client/server is allowed to cache the sent data. 

X-XSS-Protection: 0
//Describes whether protection from cross-site scripting was utilized. This protection protects from client side code injections meant to attack the server.

X-Frame-Options: SAMEORIGIN
//This header says whether a browser or api program is allowed to render a page based on certain options. The same origion option means that it can only display 
the frame in the same as the origion of the HTTP request.

X-Content-Type-Options: nosniff
//the x-content-type-option header marks an option by the serve to decribe how media types are handled. nosniff means that the media types where configured delibrately,
and should not be changed.


Alt-Svc: h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
//The alt-SVC header describes other ways in which the content can be reached. The h3 lines describe an alternate host and port number following a colon, where h3 defines the protocol
 The ma line stands for max age, and defines how long a alternate server is available for use before it becomes "unfresh" and not guranteed for use. The v line describes version
information hints for the alternate hosts.

Transfer-Encoding: chunked
//The transfer-econding flag has enformation on how the data being transfered is being encoded. Chunked encoding means that the data is broken into chunks before encoding.